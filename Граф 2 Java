public class GraphSplitter {
    #Класс для представления вершины графа
    static class Node {
        String value;
        List<Node> neighbors = new ArrayList<>();
        
        Node(String val) {
            this.value = val;
        }
    }
    
    public static void main(String[] args) {
        #Исходный список
        List<String> originalList = Arrays.asList("a", "1", "b", "2", "c", "3");
        
        #Создаем граф
        List<Node> graph = new ArrayList<>();
        
        #Заполняем граф узлами
        for (String item : originalList) {
            graph.add(new Node(item));
        }
        
        #Создаем списки для хранения результатов
        List<String> letters = new ArrayList<>();
        List<String> numbers = new ArrayList<>();
        
        #Проходим по всем узлам графа
        for (Node node : graph) {
            #Проверяем тип элемента
            if (Character.isLetter(node.value.charAt(0))) {
                letters.add(node.value);
            } else if (Character.isDigit(node.value.charAt(0))) {
                numbers.add(node.value);
            }
        }
        
        #Очищаем исходный список
        originalList.clear();
        
        #Выводим результаты
        System.out.println("Буквы: " + String.join(", ", letters));
        System.out.println("Числа: " + String.join(", ", numbers));
    }
}
